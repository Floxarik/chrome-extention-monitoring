let notificationInterval = null;

chrome.runtime.onInstalled.addListener(() => {
  console.log("Extension monitoring started");
  checkExtensions();
  startPeriodicNotifications(); // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
function checkExtensions() {
  chrome.storage.local.get(
    ["monitoredExtensions", "enableSystemNotifications"],
    (data) => {
      let monitoredExtensions = data.monitoredExtensions || [];
      let enableSystemNotifications = data.enableSystemNotifications || false;
      let disabledExtensions = [];

      chrome.management.getAll((extensions) => {
        monitoredExtensions.forEach((extId) => {
          const extension = extensions.find((e) => e.id === extId);
          if (!extension) return;

          if (!extension.enabled) {
            console.log(`‚ö† Extension ${extension.name} is disabled!`);
            disabledExtensions.push(extension.name);

            if (enableSystemNotifications) {
              sendNotification(extension.name); // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            }
          }
        });

        chrome.storage.local.set(
          { disabledExtensions: disabledExtensions },
          () => {
            if (chrome.runtime.lastError) {
              console.error(
                "Error saving disabledExtensions:",
                chrome.runtime.lastError
              );
            }
          }
        );
        updateBadge(disabledExtensions.length); // –û–±–Ω–æ–≤–ª—è–µ–º –±–µ–π–¥–∂
        updatePopupStatus(disabledExtensions, monitoredExtensions); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ popup
      });
    }
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function sendNotification(extensionName) {
  chrome.notifications.create(
    {
      type: "basic",
      iconUrl: "icon.png", // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª icon.png —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      title: "Extension Disabled!",
      message: `Extension ${extensionName} is turned off!`,
      priority: 2,
    },
    (notificationId) => {
      if (chrome.runtime.lastError) {
        console.error("Error creating notification:", chrome.runtime.lastError);
      } else {
        console.log(`üîî Notification sent: ${notificationId}`);
      }
    }
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–π–¥–∂–∞
function updateBadge(count) {
  if (count > 0) {
    chrome.action.setBadgeText({ text: count.toString() });
    chrome.action.setBadgeBackgroundColor({ color: "#FF0000" }); // –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –±–µ–π–¥–∂–∞
  } else {
    chrome.action.setBadgeText({ text: "" }); // –°–∫—Ä—ã–≤–∞–µ–º –±–µ–π–¥–∂, –µ—Å–ª–∏ –Ω–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤ popup
function updatePopupStatus(disabledExtensions, monitoredExtensions) {
  chrome.runtime.sendMessage(
    {
      action: "updateStatus",
      disabledExtensions: disabledExtensions,
      monitoredExtensions: monitoredExtensions,
    },
    (response) => {
      if (chrome.runtime.lastError) {
        // –û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –µ—Å–ª–∏ popup –∑–∞–∫—Ä—ã—Ç
        console.log("Popup is closed, message not sent.");
      } else {
        console.log("Popup status updated.");
      }
    }
  );
}

// –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Å–æ–±—ã—Ç–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
chrome.management.onDisabled.addListener((extension) => {
  chrome.storage.local.get(
    ["monitoredExtensions", "enableSystemNotifications"],
    (data) => {
      if ((data.monitoredExtensions || []).includes(extension.id)) {
        console.log(`üî¥ Extension ${extension.name} was disabled!`);

        if (data.enableSystemNotifications) {
          sendNotification(extension.name); // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        }

        chrome.storage.local.get("disabledExtensions", (data) => {
          let disabled = data.disabledExtensions || [];
          if (!disabled.includes(extension.name)) {
            disabled.push(extension.name);
            chrome.storage.local.set({ disabledExtensions: disabled }, () => {
              if (chrome.runtime.lastError) {
                console.error(
                  "Error saving disabledExtensions:",
                  chrome.runtime.lastError
                );
              }
            });
            updateBadge(disabled.length); // –û–±–Ω–æ–≤–ª—è–µ–º –±–µ–π–¥–∂
            updatePopupStatus(disabled, data.monitoredExtensions || []); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ popup
          }
        });
      }
    }
  );
});

// –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è —Å–æ–±—ã—Ç–∏—è –≤–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
chrome.management.onEnabled.addListener((extension) => {
  chrome.storage.local.get(
    ["monitoredExtensions", "disabledExtensions"],
    (data) => {
      if ((data.monitoredExtensions || []).includes(extension.id)) {
        console.log(`üü¢ Extension ${extension.name} is enabled!`);
        let disabled = data.disabledExtensions || [];
        let index = disabled.indexOf(extension.name);
        if (index !== -1) {
          disabled.splice(index, 1);
          chrome.storage.local.set({ disabledExtensions: disabled }, () => {
            if (chrome.runtime.lastError) {
              console.error(
                "Error saving disabledExtensions:",
                chrome.runtime.lastError
              );
            }
          });
          updateBadge(disabled.length); // –û–±–Ω–æ–≤–ª—è–µ–º –±–µ–π–¥–∂
          updatePopupStatus(disabled, data.monitoredExtensions || []); // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ popup
        }
      }
    }
  );
});

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function startPeriodicNotifications() {
  chrome.storage.local.get(
    ["enableSystemNotifications", "notificationFrequency"],
    (data) => {
      if (data.enableSystemNotifications) {
        const frequency = data.notificationFrequency || 15; // –î–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 15 —Å–µ–∫—É–Ω–¥
        if (notificationInterval) {
          clearInterval(notificationInterval); // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
        }
        notificationInterval = setInterval(() => {
          checkExtensions(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        }, frequency * 1000); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–µ–∫—É–Ω–¥—ã –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
      }
    }
  );
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
startPeriodicNotifications();

// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
chrome.storage.onChanged.addListener((changes) => {
  if (changes.enableSystemNotifications || changes.notificationFrequency) {
    startPeriodicNotifications(); // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ popup.js
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
  if (message.action === "checkExtensions") {
    checkExtensions(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
    sendResponse({ success: true }); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏
  }
});
